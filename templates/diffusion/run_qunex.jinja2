{% extends "generic/run_qunex.sh" %}
{% block qunex_setup %}
## This pipeline uses a template-based approach to generate the id/scan portion of batch.txt, rather than 'createBatch'
{% endblock qunex_setup %}
{% block pipeline_specific %}

    mkdir -p "${StudyFolder}/sessions/${Session}/hcp/${Session}/unprocessed/"
    mv ${StudyFolder}/T*w "${StudyFolder}/sessions/${Session}/hcp/${Session}/"
    mv ${StudyFolder}/MNINonLinear "${StudyFolder}/sessions/${Session}/hcp/${Session}/"
    mv ${StudyFolder}/unprocessed/Diffusion "${StudyFolder}/sessions/${Session}/hcp/${Session}/unprocessed/"
    
    # Find json for one of the dMRI scans; needed to provide slice ordering/timing to eddy
    json_file=`find "${StudyFolder}" -iname "*dMRI*.json" | grep -v "SBRef" | head -1`
    echo "json_file=${json_file}"

    # Extract EchoSpacing using inline python from same json
    spacing=`python << END
    import json
    json_file = "$json_file"
    with open(json_file) as f:
        data = json.load(f)
        spacing = data["EffectiveEchoSpacing"]
        # convert from seconds to milliseconds
        spacing *= 1000
        print(spacing)
    END`

    echo "# Value for the following was extracted from 'EffectiveEchoSpacing' in $(basename $json_file)." >> ${StudyFolder}/processing/batch.txt
    echo "_hcp_dwi_echospacing : $spacing" >> ${StudyFolder}/processing/batch.txt

    ######################### hcp_Diffusion
    ${QUNEXCOMMAND} hcp_Diffusion \
    --sessions="${StudyFolder}/processing/batch.txt" \
    --sessionsfolder="${StudyFolder}/sessions" \
    --overwrite="${Overwrite}" \
    --parsessions="${parsessions}" \
    --hcp_dwi_extraeddyarg="--niter=8|--fwhm=10,8,6,4,2,0,0,0|--nvoxhp=2000|--repol|--ol_type=both|--ol_nstd=5|--with_outliers|--mporder=16|--s2v_niter=8|--json=${json_file}|--estimate_move_by_susceptibility|--mbs_niter=20|--residuals|--initrand|--very_verbose"

{% endblock pipeline_specific %}