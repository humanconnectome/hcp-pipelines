{% from 'components.jinja2' import slurm_head, singularity -%}
{{ slurm_head(job_name="process_data", log_dir=CHECK_DATA_DIR, gpu=PROCESS_PBS_GPU, walltime=WALLTIME_LIMIT_HOURS, mem=MEM_LIMIT_GBS) }}

{% block pre -%}
{%- if SCRATCH_TMP_DIR is defined and SCRATCH_TMP_DIR %}
mkdir -p {{ SCRATCH_TMP_DIR }}
{% endif -%}
{%- if USE_SCRATCH_FOR_PROCESSING %}
  ####   FIX FOR "Cannot allocate memory" ERROR IN BUILD SPACE  #####
  BASE="{{ SESSION }}"
  SCRATCH="{{ SCRATCH_SPACE }}/{{ WORKING_DIR_BASENAME }}"
  ORIGINAL="{{ BUILD_SPACE }}/{{ WORKING_DIR_BASENAME }}"

  mkdir -p $SCRATCH
  mv $ORIGINAL/$BASE $SCRATCH

{% endif -%}
{%- endblock pre -%}

{%- if SCRATCH_TMP_DIR is defined and SCRATCH_TMP_DIR %}
	{% set PROCESS_DATA_BINDPATH = PROCESS_DATA_BINDPATH + "," + SCRATCH_TMP_DIR + ":/tmp" %}
{% endif -%}
{{ singularity(
        container=QUNEX_CONTAINER,
        runpath=RUN_QUNEX_SCRIPT,
        bindpath=PROCESS_DATA_BINDPATH,
		nvidia=PROCESS_NVIDIA
) }}

RC=$?
if [ $RC -ne 0 ] ; then
	>&2 echo "ERROR:  Singularity PROCESS_DATA process failed (RC=$RC).  Let's not proceed.  Exiting."	
	exit $RC
fi

{% block content -%}
{%- if USE_SCRATCH_FOR_PROCESSING %}
mv $SCRATCH/$BASE $ORIGINAL
if [[ "$SCRATCH" =~ /scratch/{{ USER }}/.*$ ]] ; then
	rm -rf $SCRATCH
fi
{% endif -%}
{%- if SCRATCH_TMP_DIR is defined and SCRATCH_TMP_DIR %}
if [[ "{{ SCRATCH_TMP_DIR }}" =~ /scratch/{{ USER }}/.*$ ]] ; then
	rm -rf {{ SCRATCH_TMP_DIR }}
fi
{% endif -%}
{% endblock %}

