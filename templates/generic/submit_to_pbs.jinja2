#!/usr/bin/env bash


delete_resource(){
  echo "Deleting the resource from the XNAT server"
  {{ PYTHON }} \
        -c 'from shared_values import client; client.delete_resource("{{OUTPUT_RESOURCE_NAME}}")'
}

mark_running_status(){
  echo "Creating \"Running Status Marker\" file to indicate that jobs are queued."
  {{ PYTHON }} \
      {{ MARK_RUNNING_STATUS_RUNPATH }} \
          --status=queued
  # The step above sometimes doesn't successfully update the catalog
  curl -n https://{{ PUT_SERVER }}/data/services/refresh/catalog?resource=/archive/projects/{{ PROJECT }}/subjects/{{ SUBJECT }}/experiments/{{ SESSION }}/resources/RunningStatus\&options=delete,append,populateStats -X POST -I
}
{% if CLEAN_OUTPUT_FIRST %}
  # Delete the resource first
  delete_resource
{% else %}
  ### Deleting the resource first has been disabled
  ### Uncomment line below to re-enable
  #delete_resource
{% endif %}

# Run Script to create running status marker file
mark_running_status

# List of generated scripts
GET_DATA_JOB_SCRIPT_NAME="{{ GET_DATA_JOB_SCRIPT_NAME }}"
PROCESS_DATA_JOB_SCRIPT_NAME="{{ PROCESS_DATA_JOB_SCRIPT_NAME }}"
{% if FREESURFER_SCRIPT_NAME is defined -%}
FREESURFER_SCRIPT_NAME="{{ FREESURFER_SCRIPT_NAME }}"
{%- endif %}
CLEAN_DATA_SCRIPT_NAME="{{ CLEAN_DATA_SCRIPT_NAME }}"
PUT_DATA_SCRIPT_NAME="{{ PUT_DATA_SCRIPT_NAME }}"
CHECK_DATA_JOB_SCRIPT_NAME="{{ CHECK_DATA_JOB_SCRIPT_NAME }}"

# Chain the scripts onto the PBS
{% if PROCESSING_STAGE not in [ "GET_DATA", "PROCESS_DATA", "CLEAN_DATA", "PUT_DATA", "CHECK_DATA" ] -%}
# {% endif -%}
PRIOR_JOB=$(sbatch $GET_DATA_JOB_SCRIPT_NAME | tr " " '\n' | tail -1)
{% if PROCESSING_STAGE not in [ "PROCESS_DATA", "CLEAN_DATA", "PUT_DATA", "CHECK_DATA" ] -%}
# {% endif -%}
PRIOR_JOB=$(sbatch --dependency=afterok:$PRIOR_JOB $PROCESS_DATA_JOB_SCRIPT_NAME | tr " " '\n' | tail -1)
{% if PROCESSING_STAGE not in [ "CLEAN_DATA", "PUT_DATA", "CHECK_DATA" ] -%}
# {% endif -%}
PRIOR_JOB=$(sbatch --dependency=afterok:$PRIOR_JOB $CLEAN_DATA_SCRIPT_NAME | tr " " '\n' | tail -1)
{% if PROCESSING_STAGE not in [ "PUT_DATA", "CHECK_DATA" ] -%}
# {% endif -%}
PRIOR_JOB=$(sbatch --dependency=afterok:$PRIOR_JOB $PUT_DATA_SCRIPT_NAME | tr " " '\n' | tail -1)
{% if PROCESSING_STAGE not in [ "CHECK_DATA" ] -%}
# {% endif -%}
PRIOR_JOB=$(sbatch --dependency=afterok:$PRIOR_JOB $CHECK_DATA_JOB_SCRIPT_NAME | tr " " '\n' | tail -1)



# Don't comment out, this should always run last
# This cleans up the running status marker
PRIOR_JOB=$(sbatch {% if PROCESSING_STAGE in [ "GET_DATA", "PROCESS_DATA", "CLEAN_DATA", "PUT_DATA", "CHECK_DATA" ] %} --dependency=afterany:$PRIOR_JOB {% endif %} {{ MARK_NO_LONGER_RUNNING_SCRIPT_NAME }})

