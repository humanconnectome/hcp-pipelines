HCP_RUN_UTILS="{{ HCP_RUN_UTILS }}"
XNAT_PBS_JOBS="{{ XNAT_PBS_JOBS }}"
ARCHIVE_ROOT="{{ ARCHIVE_ROOT }}"

source ${HCP_RUN_UTILS}/shlib/log.shlib  # Logging related functions
source ${HCP_RUN_UTILS}/shlib/utils.shlib  # Utility functions
log_Msg "XNAT_PBS_JOBS: ${XNAT_PBS_JOBS}"
log_Msg "HCP_RUN_UTILS: ${HCP_RUN_UTILS}"
log_Msg "ARCHIVE_ROOT: ${ARCHIVE_ROOT}"


g_user="{{ USERNAME }}"
g_password="{{ PASSWORD }}"
g_server="{{ PUT_SERVER }}"
g_project="{{ SUBJECT_PROJECT }}"
g_scan="{{ SUBJECT_EXTRA }}"
g_subject="{{ SUBJECT_ID }}"
g_classifier="{{ SUBJECT_CLASSIFIER }}"
g_resource="RunningStatus"
g_running="FALSE"









show_job_start

show_platform_info

get_options "$@"

{% if PIPELINE_NAME == "FunctionalPreprocessing" -%}
local directory="${BUILD_DIR}/${g_project}/FunctionalPreprocessing.${g_subject}_${g_classifier}_${g_scan}_RUNNING_STATUS"
local file="FunctionalPreprocessing.${g_subject}_${g_classifier}_${g_scan}.RUNNING"
{%- else -%}
local directory="${BUILD_DIR}/${g_project}/{{ PIPELINE_NAME }}.${g_subject}_${g_classifier}_RUNNING_STATUS"
local file="{{ PIPELINE_NAME }}.${g_subject}_${g_classifier}.RUNNING"
{% endif %}

local existing_file="${ARCHIVE_ROOT}/${g_project}/arc001/${g_subject}_${g_classifier}/RESOURCES/RunningStatus/${file}"
local path=${directory}/${file}

if [ "${g_running}" = "TRUE" ]; then
    mkdir -p ${directory}
    echo "User: ${g_user}, Reason: ${g_reason}" > ${path}
    ${XNAT_PBS_JOBS}/WorkingDirPut/PutDirIntoResource.sh \
                --user=${g_user} \
                --password=${g_password} \
                --server=${g_server} \
                --project=${g_project} \
                --subject=${g_subject} \
                --session=${g_subject}_${g_classifier} \
                --resource=${g_resource} \
                --mem="256" \
                --reason=${g_reason} \
                --dir=${directory} \
                --use-http \
                --protocol="https" \
                --force
        rm -rf ${directory}

else
    if [ -e "${existing_file}" ]; then
        ${XNAT_PBS_JOBS}/WorkingDirPut/RemoveFileFromResource.sh \
                    --user=${g_user} \
                    --password=${g_password} \
                    --protocol="https" \
                    --server=${g_server} \
                    --project=${g_project} \
                    --subject=${g_subject} \
                    --session=${g_subject}_${g_classifier} \
                    --resource=${g_resource} \
                    --file-path-within-resource=${file}
    fi

fi

log_Msg "Complete"
