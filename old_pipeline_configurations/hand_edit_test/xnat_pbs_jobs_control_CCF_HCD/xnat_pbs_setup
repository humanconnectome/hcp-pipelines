#!/bin/bash

requested_db="$(echo ${1} | tr '[:upper:]' '[:lower:]')"
if [ -z "${2}" ]; then
	unset silence_requested
elif [ "${2}" == "-s" ]; then
	silence_requested="TRUE"
else
	echo "Unrecognized second parameter: ${2}"
	echo ""
	echo "xnat_pbs_setup: ERROR:"
	echo "xnat_pbs_setup: ERROR: Unrecognized <silence-request>: ${2}"
	echo "xnat_pbs_setup: ERROR: Please specify -s or leave second parameter unspecified"
	echo "xnat_pbs_setup: ERROR:"
fi

export REQUESTED_XNAT_SERVER=${requested_db}

export SINGULARITY_CONTAINER_VERSION=singularity-3.2.1
export SINGULARITY_BIND_PATH=/NRG-data/NRG/intradb/build_ssd,/export/HCP/qunex-hcp,/scratch/${USER}/hand_edit_buildspace
#export SINGULARITY_QUNEXRUN_PATH=/export/HCP/qunex-hcp/run_scripts/run_qunex.sh
export SINGULARITY_QUNEXRUN_PATH=$HOME/processing/hand_edit_test/run_qunex_test.sh
export SINGULARITY_QUNEXPARAMETER_PATH=/export/HCP/qunex-hcp/parameter_files/SpecFiles_v4

#export SINGULARITY_CONTAINER_PATH=/export/HCP/qunex-hcp/production_containers/HCA_HCD_Func/qunex_suite_0_49_10.sif
#export SINGULARITY_CONTAINER_XNAT_PATH=/export/HCP/qunex-hcp/production_containers/Process/HCPpipelines_XNAT.sif
#export SINGULARITY_CONTAINER_PATH=/export/HCP/qunex-hcp/production_containers/HCA_HCD_IcaFix/qunex_0_50_02.sif
#export SINGULARITY_CONTAINER_PATH=/export/HCP/qunex-hcp/production_containers/qunex_0.61.8.sif
export SINGULARITY_CONTAINER_PATH=/export/HCP/qunex-hcp/production_containers/HCA_HCD_IcaFix/qunex_0_50_02.sif
export SINGULARITY_CONTAINER_XNAT_PATH=/export/HCP/qunex-hcp/production_containers/Process/HCPpipelines_XNAT_1_0_3.sif
export GRADIENT_COEFFICIENT_PATH=/export/HCP/gradient_coefficient_files

export SEVEN_MM_TEMPLATE_PROJECTS="('HCP_500', 'HCP_900', 'HCP_1200')"
export CONNECTOME_SKYRA_SCANNER_PROJECTS="('HCP_500', 'HCP_900', 'HCP_1200')"
export PRISMA_3T_PROJECTS="('CCF_BWH_STG', 'CCF_MDD_STG', 'CCF_HCA_STG', 'CCF_HCD_STG')"
export XNAT_PBS_JOBS_BUILD_DIR=${HOME}/XNAT_BUILD_DIR/${USER}
export HAND_EDIT_PROCESSING_DIR=/scratch/${USER}/hand_edit_buildspace
export XNAT_PBS_JOBS_LOG_DIR=${HOME}/XNAT_LOGS

if [ "${requested_db}" == "intradb" ]; then
	if [ -z "${silence_requested}" ]; then
		echo "xnat_pbs_setup: Setting up XNAT_PBS_JOBS environment to work with IntraDB"
	fi

	export XNAT_PBS_JOBS_ARCHIVE_ROOT=/NRG-data/NRG/intradb/archive
	export XNAT_PBS_JOBS_SHADOWS_ROOT=/data/intradb/build_ssd
        export XNAT_PBS_JOBS_SHADOWS_SUBDIR=`echo "$XNAT_PBS_JOBS_BUILD_DIR" | sed -e "s/^.*\/${USER}\/*//"`
	export XNAT_PBS_JOBS_XNAT_SERVER="hcpi-shadow10.nrg.wustl.edu"
	export XNAT_PBS_JOBS_PUT_SERVER_LIST="hcpi-shadow11.nrg.wustl.edu hcpi-shadow12.nrg.wustl.edu hcpi-shadow13.nrg.wustl.edu hcpi-shadow14.nrg.wustl.edu hcpi-shadow15.nrg.wustl.edu hcpi-shadow16.nrg.wustl.edu hcpi-shadow17.nrg.wustl.edu hcpi-shadow18.nrg.wustl.edu hcpi-shadow19.nrg.wustl.edu"

else
	echo "xnat_pbs_setup: ERROR:"
	echo "xnat_pbs_setup: ERROR: Unrecognized <db-spec>: ${1} --> ${requested_db}"
	echo "xnat_pbs_setup: ERROR: Please specify connectomedb or intradb (case insensitive)"
	echo "xnat_pbs_setup: ERROR:"

fi
